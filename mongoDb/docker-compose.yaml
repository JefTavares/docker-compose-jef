services:
  mongodb: # Nome mais descritivo do serviço
    image: mongo:7.0 # Especificar versão explícita
    container_name: webhook-mongodb # Nome mais descritivo
    command: mongod --auth
    environment:
      MONGO_INITDB_DATABASE: webhook_db
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin} # Usando variáveis de ambiente
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-root}
    ports:
      - "27017:27017" # Simplificando o mapeamento de portas
    volumes:
      - mongodb_data:/data/db
      # Remove a linha abaixo
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - webhook_network
    healthcheck: # Adicionando healthcheck
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped # Política de restart

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: webhook-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-root}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USERNAME:-admin} # Autenticação básica
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD:-pass}
    networks:
      - webhook_network
    depends_on:
      mongodb:
        condition: service_healthy # Aguarda o MongoDB estar saudável

volumes:
  mongodb_data:
    name: webhook_mongodb_data # Nome explícito para o volume

networks:
  webhook_network:
    name: webhook_network
    driver: bridge
